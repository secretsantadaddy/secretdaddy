#include<iostream>
#include<GL/glut.h>
#include<math.h>
using namespace std;

void init()
{
	glClearColor(1.0, 1.0, 1.0, 1.0);
	glMatrixMode(GL_PROJECTION);
	glPointSize(3.0);
	gluOrtho2D(-500, 500, -500, 500);
}

void bline(int x1, int y1, int x2, int y2)
{
	int dx = abs (x2 - x1);
	int dy = abs (y2 - y1);
	int p = 2 * dy - dx;
	int x = x1 , y = y1;
	
	glBegin(GL_POINTS);
	
	while(x <= x2)
	{
		glVertex2i(x, y);
		
		if(p < 0)
		{
			p = p + 2 * dy;
		}
		else
		{
			p = p + 2 * dy - 2 * dx;
			y++;
		}
		x++;
	}
	glEnd();
}

void drawQ()
{
	glBegin(GL_LINES);
	glColor3f(0.0, 0.0, 1.0);
	glVertex2i(-500, 0);
	glVertex2i(500 , 0);
	glVertex2i(0, -500);
	glVertex2i(0, 500);
	glEnd();
	
}

void display()
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(0.0, 0.0, 1.0);
	drawQ();
	glColor3f(1.0, 0.0, 0.0);
	bline(-200, -200, 200, 200);
	glFlush;
}

int main(int argc, char ** argv)
{
	glutInit(&argc , argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(200, 200);
	glutCreateWindow("Bresenham Line");
	init();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
